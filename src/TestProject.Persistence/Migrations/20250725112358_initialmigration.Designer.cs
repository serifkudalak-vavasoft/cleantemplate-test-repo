// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject.Persistence;

#nullable disable

namespace TestProject.Persistence.Migrations
{
    [DbContext(typeof(TestAppDbContext))]
    [Migration("20250725112358_initialmigration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestProject.Domain.Entities.AutoPart", b =>
                {
                    b.Property<Guid>("AutoPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("AutoPartId");

                    b.HasIndex("CategoryId");

                    b.ToTable("AutoPart");

                    b.HasData(
                        new
                        {
                            AutoPartId = new Guid("a441eb40-9636-4ee6-be49-a66c5ec1330b"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-performance piston",
                            ImageUrl = "",
                            Name = "Piston",
                            Price = 500
                        },
                        new
                        {
                            AutoPartId = new Guid("ac3cfaf5-34fd-4e4d-bc04-ad1083ddc340"),
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Durable crankshaft",
                            ImageUrl = "",
                            Name = "Crankshaft",
                            Price = 1200
                        },
                        new
                        {
                            AutoPartId = new Guid("d97a15fc-0d32-41c6-9ddf-62f0735c4c1c"),
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Stylish door handle",
                            ImageUrl = "",
                            Name = "Door Handle",
                            Price = 100
                        },
                        new
                        {
                            AutoPartId = new Guid("7aeb2c01-fe8e-4b84-a5ba-330bdf950f5c"),
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Impact-resistant bumper",
                            ImageUrl = "",
                            Name = "Front Bumper",
                            Price = 800
                        },
                        new
                        {
                            AutoPartId = new Guid("f5a6a3a0-4227-4973-abb5-a63fbe725923"),
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Bright LED headlight",
                            ImageUrl = "",
                            Name = "Headlight",
                            Price = 200
                        },
                        new
                        {
                            AutoPartId = new Guid("4ad901be-f447-46dd-bcf7-dbe401afa203"),
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High-efficiency alternator",
                            ImageUrl = "",
                            Name = "Alternator",
                            Price = 400
                        });
                });

            modelBuilder.Entity("TestProject.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                            CreatedDate = new DateTime(2025, 7, 25, 11, 23, 58, 400, DateTimeKind.Utc).AddTicks(2438),
                            Name = "Engine Parts"
                        },
                        new
                        {
                            CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                            CreatedDate = new DateTime(2025, 7, 25, 11, 23, 58, 400, DateTimeKind.Utc).AddTicks(2491),
                            Name = "Body Parts"
                        },
                        new
                        {
                            CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                            CreatedDate = new DateTime(2025, 7, 25, 11, 23, 58, 400, DateTimeKind.Utc).AddTicks(2509),
                            Name = "Electrical Components"
                        });
                });

            modelBuilder.Entity("TestProject.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TestProject.Domain.Entities.AutoPart", b =>
                {
                    b.HasOne("TestProject.Domain.Entities.Category", "Category")
                        .WithMany("AutoParts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TestProject.Domain.Entities.Category", b =>
                {
                    b.Navigation("AutoParts");
                });
#pragma warning restore 612, 618
        }
    }
}
